pipeline{

agent any

options {
  timestamps()
  buildDiscarder logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '5', daysToKeepStr: '', numToKeepStr: '5')
}

tools{
maven 'maven 3.8.5'
}

stages{

//This stage will get the source from GitHub
stage('checkoutcode'){
steps{
    slackNotifications('STARTED')
 git branch: 'development', credentialsId: '9e14761f-0836-4b46-8f2c-adde88b50610', url: 'https://github.com/subbu8319/maven-web-application.git'
}
}

//This stage will do the build
stage('Build'){
steps{
sh "mvn clean package"
}
}

//This stage will execute SonarQube Report
stage('ExecuteSonarQubeReport'){
steps{
 sh "mvn clean sonar:sonar"
}
}
//This stage will gives Artifacts into Nexus Repos
stage('UploadArtifactIntoArtifactoryRepo'){
steps{
 sh "mvn clean deploy"
}
}

//Deploy Application into Tomcat Server
stage('DeployAppInto TamcatServer'){
steps{
 sshagent(['7e3e369e-d613-4e78-a88b-b84117a345d4']) {
    sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war  ec2-user@172.31.32.190:/opt/apache-tomcat-9.0.65/webapps/"
}
}
}
}//stages closing

post {
  success {
  slackNotifications(currentBuild.result)  
  }
  failure {
    slackNotifications(currentBuild.result)
  }
}
}//pipeline closing

def slackNotifications(String buildStatus = 'STARTED') {
  // build status of null means successful
  buildStatus =  buildStatus ?: 'SUCCESS'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    colorName = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESS') {
    colorName = 'GREEN'
    colorCode = '#00FF00'
  } else {
    colorName = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary, channel: "#walmart")
}
